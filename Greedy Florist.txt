Prepare Algorithms Greedy Greedy Florist

using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution {

    // Complete the getMinimumCost function below.
    static int getMinimumCost(int k, int[] c) {
        List<int> l = c.OrderByDescending(x=>x).ToList<int>();
        int intReturn = 0;
        intReturn += l.GetRange(0, k).Sum();
        List<int> l2 = l.GetRange(k, l.Count-k);
        
        int i = 0;
        int j = 1;
        int loop = 1;
        while(i<l2.Count){
            intReturn+=(loop+1)*l2[i];
            j++;
            if(j>k){j=1;loop++;}
            i++;
        }
        
        return intReturn;
        

    }

    static void Main(string[] args) {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        string[] nk = Console.ReadLine().Split(' ');

        int n = Convert.ToInt32(nk[0]);

        int k = Convert.ToInt32(nk[1]);

        int[] c = Array.ConvertAll(Console.ReadLine().Split(' '), cTemp => Convert.ToInt32(cTemp))
        ;
        int minimumCost = getMinimumCost(k, c);

        textWriter.WriteLine(minimumCost);

        textWriter.Flush();
        textWriter.Close();
    }
}
